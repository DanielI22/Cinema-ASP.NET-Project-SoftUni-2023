@model MovieDetailsViewModel
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Details";
}

<div class="container">
    <div class="row">
        <div class="col-md-4">
            <img src="@Model.PosterUrl" class="img-fluid" alt="@Model.Title">
        </div>
        <div class="col-md-8">
            <h2>@Model.Title</h2>
            <p>Release Year: @Model.ReleaseYear</p>
            <p>Genre: @string.Join(", ", @Model.Genres)</p>
            <p>Description: @Model.Description</p>

            @if (SignInManager.IsSignedIn(User))
            {
                <div>
                    <h4>Add Review</h4>
                    <form asp-controller="Review" asp-action="Post" asp-route-movieId="@Model.Id" method="post">
                        <textarea asp-for="@Model.ReviewToAdd" class="form-control" placeholder="Write your review"></textarea>
                        <span asp-validation-for="@Model.ReviewToAdd" class="text-danger"></span><br />
                        <div class="d-flex justify-content-end">
                             <button class="btn btn-secondary" type="submit">Submit</button>
                        </div>
                    </form>
                </div>
            }
                @if (Model.Reviews.Any())
                {
                    <h4>Reviews</h4>

                    <ul>
                        @foreach (var review in Model.Reviews)
                        {
                            <li>
                                <h5>@review.ReviewAuthor</h5>
                                <p>@review.ReviewText</p>
                                @if (SignInManager.IsSignedIn(User) && User.GetId() == review.CreatorId.ToString())
                                {
                                    <form asp-controller="Review" asp-action="DeleteMy" asp-route-reviewId="@review.ReviewId" asp-route-movieId="@Model.Id" method="post" )">
                                        <button type="submit" class="btn btn-danger">Delete</button>
                                    </form>
                                }
                            </li>
                        }
                    </ul>

                @if (Model.TotalPages > 1)
                {
                    <nav>
                        <ul class="pagination">
                            @if (Model.CurrentPage > 1)
                            {
                                <li class="page-item">
                                    <a class="page-link" href="@Url.Action("Details", new { movieId = Model.Id, pageNumber = Model.CurrentPage - 1, pageSize = Model.PageSize })">&laquo; Previous</a>
                                </li>
                            }

                            @for (int i = 1; i <= Model.TotalPages; i++)
                            {
                                <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                    <a class="page-link" href="@Url.Action("Details", new { movieId = Model.Id, pageNumber = i, pageSize = Model.PageSize })">@i</a>
                                </li>
                            }

                            @if (Model.CurrentPage < Model.TotalPages)
                            {
                                <li class="page-item">
                                    <a class="page-link" href="@Url.Action("Details", new { movieId = Model.Id, pageNumber = Model.CurrentPage + 1, pageSize = Model.PageSize })">Next &raquo;</a>
                                </li>
                            }
                        </ul>
                    </nav>
                }
                }
            @if (!SignInManager.IsSignedIn(User))
            {
                <p>Please sign in to add your own review.</p>
            }
        </div>
    </div>
</div>


@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}